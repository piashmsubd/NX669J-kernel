name: Build NX669J Kernel

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      # ১. রিপোজিটরি চেকআউট
      - name: Checkout Repository
        uses: actions/checkout@v3

      # ২. বিল্ড পরিবেশ সেটআপ
      - name: Setup Build Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y git bc bison flex libssl-dev libelf-dev gcc-aarch64-linux-gnu make python2
          sudo ln -sf /usr/bin/python2 /usr/bin/python

      # ৩. videodev2.h ফাইলে time.h ইনক্লুড করা
      - name: Fix videodev2.h Header
        run: |
          sed -i '1i #include <linux/time.h>' usr/include/linux/videodev2.h || true
        working-directory: ./msm-5.4

      # ৪. psi.h ফাইলে ফরম্যাট ফিক্স (নিশ্চিত করা)
      - name: Fix psi.h Format Warning
        run: |
          # ফাইলের আগের অবস্থা দেখা
          echo "Before fix:"
          grep "trace_raw_output_psi_event" include/trace/events/psi.h || true
          # #%u কে %u দিয়ে প্রতিস্থাপন
          sed -i 's/#%u/%u/g' include/trace/events/psi.h
          # ফিক্সের পর অবস্থা দেখা
          echo "After fix:"
          grep "trace_raw_output_psi_event" include/trace/events/psi.h || true
        working-directory: ./msm-5.4

      # ৫. কার্নেল কনফিগারেশন
      - name: Configure Kernel
        run: |
          make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- vendor/lahaina-gki_defconfig
          ./scripts/kconfig/merge_config.sh .config arch/arm64/configs/vendor/lahaina-NX669J_diff
        working-directory: ./msm-5.4

      # ৬. কার্নেল বিল্ড (Warning বন্ধ করা)
      - name: Build Kernel
        run: |
          make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- -j$(nproc) CFLAGS_KERNEL="-w" WERROR=0
        working-directory: ./msm-5.4

      # ৭. বিল্ড আউটপুট আপলোড
      - name: Upload Kernel Image
        uses: actions/upload-artifact@v4
        with:
          name: NX669J-Kernel-Image
          path: msm-5.4/arch/arm64/boot/Image

      # ৮. রিলিজ তৈরি (ঐচ্ছিক)
      - name: Create Release
        if: success()
        uses: ncipollo/release-action@v1
        with:
          artifacts: "msm-5.4/arch/arm64/boot/Image"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: "kernel-v${{ github.run_number }}"
          name: "NX669J Kernel Build #${{ github.run_number }}"
