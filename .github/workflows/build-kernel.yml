name: Build NX669J Kernel

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Build Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y git bc bison flex libssl-dev libelf-dev gcc-aarch64-linux-gnu make python2 wget xz-utils
          sudo ln -sf /usr/bin/python2 /usr/bin/python
          sudo apt-get install -y linux-headers-$(uname -r) || echo "Headers package not found!"

      - name: Fix Missing Headers
        run: |
          wget https://cdn.kernel.org/pub/linux/kernel/v5.x/linux-5.10.tar.xz
          tar -xf linux-5.10.tar.xz
          sudo mkdir -p /usr/include/uapi/linux/
          sudo cp -r linux-5.10/include/uapi/linux/* /usr/include/uapi/linux/
        working-directory: ./msm-5.4

      - name: Configure Kernel
        run: |
          if [ -f arch/arm64/configs/vendor/lahaina-gki_defconfig ]; then
            make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- vendor/lahaina-gki_defconfig
          else
            make ARCH=arm64 defconfig
          fi
        working-directory: ./msm-5.4

      - name: Build Kernel
        run: |
          sed -i 's/WERROR := 1/WERROR := 0/' Makefile || true
          make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- -j$(nproc) CFLAGS_KERNEL="-w" WERROR=0
        working-directory: ./msm-5.4

      - name: Upload Kernel Image
        uses: actions/upload-artifact@v4
        with:
          name: NX669J-Kernel-Image
          path: msm-5.4/arch/arm64/boot/Image*

      - name: Create Release
        if: success()
        uses: ncipollo/release-action@v1
        with:
          artifacts: "msm-5.4/arch/arm64/boot/Image*"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: "kernel-v${{ github.run_number }}"
          name: "NX669J Kernel Build #${{ github.run_number }}"
