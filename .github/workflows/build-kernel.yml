name: Build NX669J Kernel with DeepSeek AI

on:
  workflow_dispatch:
    inputs:
      deepseek_api_key:
        description: "Enter DeepSeek API Key"
        required: true
        type: string
      github_repo:
        description: "Enter GitHub Repo (Default: piashmsubd/android_kernel_nubia_sm8350)"
        required: false
        default: "piashmsubd/android_kernel_nubia_sm8350"
      device_name:
        description: "Enter Device Codename (Default: nubia_sm8350)"
        required: false
        default: "nubia_sm8350"

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      # 1️⃣ **চেকআউট রেপো**
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2️⃣ **Build Environment Setup**
      - name: Setup Build Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y git bc bison flex libssl-dev libelf-dev \
            gcc-aarch64-linux-gnu make python3 curl jq
          sudo ln -sf /usr/bin/python3 /usr/bin/python

      # 3️⃣ **Set API Key from Workflow Input**
      - name: Setup DeepSeek API Key
        run: echo "DEEPSEEK_API_KEY=${{ github.event.inputs.deepseek_api_key }}" >> $GITHUB_ENV

      # 4️⃣ **DeepSeek AI দিয়ে `lahaina-NX669J_diff` চেক**
      - name: Analyze lahaina-NX669J_diff with DeepSeek AI
        run: |
          FILE_CONTENT=$(cat msm-5.4/arch/arm64/configs/vendor/lahaina-NX669J_diff | jq -Rs .)
          RESPONSE=$(curl -s -X POST "https://api.deepseek.com/v1/chat/completions" \
            -H "Authorization: Bearer $DEEPSEEK_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{
              "model": "deepseek-coder",
              "messages": [{"role": "user", "content": "Check this kernel config file for errors and suggest fixes:\n\n'"$FILE_CONTENT"'"}],
              "max_tokens": 1000
            }')

          echo "DeepSeek AI Response:"
          echo "$RESPONSE" | jq -r '.choices[0].message.content'

      # 5️⃣ **Kernel Configuration**
      - name: Configure Kernel
        run: |
          cd msm-5.4
          make oldconfig
          make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- vendor/lahaina-gki_defconfig
          ./scripts/kconfig/merge_config.sh .config arch/arm64/configs/vendor/lahaina-NX669J_diff

      # 6️⃣ **Kernel Build**
      - name: Build Kernel
        run: |
          cd msm-5.4
          make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- -j$(nproc) CFLAGS_KERNEL="-w"

      # 7️⃣ **Upload Kernel Image**
      - name: Upload Kernel Image
        uses: actions/upload-artifact@v4
        with:
          name: NX669J-Kernel-Image
          path: msm-5.4/arch/arm64/boot/Image

      # 8️⃣ **Create GitHub Release (Optional)**
      - name: Create Release
        if: success()
        uses: ncipollo/release-action@v1
        with:
          artifacts: "msm-5.4/arch/arm64/boot/Image"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: "kernel-v${{ github.run_number }}"
          name: "NX669J Kernel Build #${{ github.run_number }}"
